<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c/c&#43;&#43; on Arindam Ghosh / Computer Vision Researcher</title>
    <link>https://aryndam9.github.io/tags/c/c&#43;&#43;/</link>
    <description>Recent content in c/c&#43;&#43; on Arindam Ghosh / Computer Vision Researcher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2023 Arindam Ghosh</copyright><atom:link href="https://aryndam9.github.io/tags/c/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IRIS Flight Software Development</title>
      <link>https://aryndam9.github.io/projects/iris-rover/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/projects/iris-rover/</guid>
      <description>Github
I helped develop the C&amp;amp;DH flight software for IRIS, CMU&amp;rsquo;s Lunar Rover. The flight software uses NASA JPL&amp;rsquo;s F-Prime flight-software framework on top of FreeRTOS. The C&amp;amp;DH is a TI Hercules Safety-Microcontroller.
Links: Github </description>
      <content>&lt;p&gt;&lt;a href=&#34;https://github.com/PlanetaryRobotics/CubeRoverPackage&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I helped develop the C&amp;amp;DH flight software for IRIS, CMU&amp;rsquo;s Lunar Rover.
The flight software uses NASA JPL&amp;rsquo;s F-Prime flight-software framework on top of FreeRTOS.
The C&amp;amp;DH is a TI Hercules Safety-Microcontroller.&lt;/p&gt;
&lt;h4 id=&#34;links&#34;&gt;Links:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PlanetaryRobotics/CubeRoverPackage&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Lawrence Livermore National Lab</title>
      <link>https://aryndam9.github.io/experience/llnl-2020/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/experience/llnl-2020/</guid>
      <description>I originally interned at LLNL over the summer of 2017 (click hear to learn more about my group), and joined part-time during university to support the software side of the project longer-term. To facilitate me working at the national lab part-time during university I am contracted under J&amp;amp;A Film Preservation, a company that has been working with the Film Scanning and Re-Analysis Project for several years. I am continuing to develop vision algorithms for scientific measurements, but I am also working on streamlining our team&amp;rsquo;s workflow by using the latest workflow automation tools like Dagster.</description>
      <content>&lt;p&gt;&lt;a href=&#34;https://aryndam9.github.io/experience/llnl-2017&#34;&gt;I originally interned at LLNL over the summer of 2017 (click hear to learn more about my group)&lt;/a&gt;, and joined part-time during university to support the software side of the project longer-term.
To facilitate me working at the national lab part-time during university I am contracted under J&amp;amp;A Film Preservation, a company that has been working with the Film Scanning and Re-Analysis Project for several years.
I am continuing to develop vision algorithms for scientific measurements, but I am also working on streamlining our team&amp;rsquo;s workflow by using the latest workflow automation tools like Dagster.&lt;/p&gt;
&lt;p&gt;Over the past 2 years working for the Film Scanning and Re-analysis project I have added several new measurement tools to our measurement tool written in Python.
These tools include &lt;strong&gt;global-segmented&lt;/strong&gt; film exposure measurement methods, and a a new fireball detection pipeline that I architected utilizing spectral analysis and temporal edge tracking.
I also added measurement statistics for all of the data our group generates using scikit-learn to better understand our measurements.
In addition, I have refactored our codebase to explicitly support both CLI and GUI (Tk) methods to run which will allow the team to programmatically re-analyze and update old results more easily.&lt;/p&gt;
&lt;p&gt;From the refactoring sprint, I was able to abstract our application logic to work well on both desktop environments for developing new codes and on HPC environments provided by Livermore Computing&amp;rsquo;s supercomputers.
Dagster, a workflow orchestration tool, ties our workflow together with its pipeline and asset management systems, and I developed a multithreaded image loader as a CPython module to further speed up our program&amp;rsquo;s analysis.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Embedded LS-PIV for Measuring Stream Flows</title>
      <link>https://aryndam9.github.io/projects/lspiv-semester-project/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/projects/lspiv-semester-project/</guid>
      <description>Bitbucket not currently public
The USGS measures stream flows since they are critical for long-term tracking and modeling/forecasting to ensure that federal water priorities and responsibilities can be met and that the nation’s rivers canbe effectively managed. Recently, the USGS has been looking at non-contact methods of collection this data which would allow USGS scientists to gather data more safely and possibly without even going in to the field. One such method is large-scale particle image velocimetry (LS-PIV).</description>
      <content>&lt;p&gt;&lt;a href=&#34;#&#34;&gt;Bitbucket &lt;strong&gt;not currently public&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The USGS measures stream flows since they are critical for long-term tracking and modeling/forecasting to ensure that federal water priorities and responsibilities can be met and that the nation’s rivers canbe effectively managed.
Recently, the USGS has been looking at non-contact methods of collection this data which would allow USGS scientists to gather data more safely and possibly without even going in to the field.
One such method is large-scale particle image velocimetry (LS-PIV).
LS-PIV is a special case of algorithms that perform optical flow; at its is a cross correlation operation which is expensive in both time complexity and energy usage.
My peers and I optimize the PIV algorithm to run on a 32-bit embedded microcontroller that can quickly and accurately perform the PIV computation and have a battery life of up to 2 years.&lt;/p&gt;

  &lt;img src=&#34;https://aryndam9.github.io/projects/lspiv-semester-project/poster.png&#34;  alt=&#34;Embedded LS-PIV semester project poster&#34;  class=&#34;center&#34;  /&gt;


&lt;h4 id=&#34;links&#34;&gt;Links:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aryndam9.github.io/projects/lspiv-semester-project/paper.pdf&#34;&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aryndam9.github.io/projects/lspiv-semester-project/presentation.pdf&#34;&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aryndam9.github.io/projects/lspiv-semester-project/poster.pdf&#34;&gt;Poster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#&#34;&gt;Bitbucket &lt;strong&gt;not currently public&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Cal Poly Autonomous Vehicle Security Group</title>
      <link>https://aryndam9.github.io/experience/cpavsec-2020/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/experience/cpavsec-2020/</guid>
      <description>The Cal Poly Autonomous Vehicle Security Group is headed by Dr. Bruce DeBruhl who is involved in security research for autonomous vehicles, IOT devices, and all things networked. The projects I have worked on in this group have been primarily focused towards the security of platoons of autonomous vehicles. Vehicle platoons require extensive communication to stay cohesive and ensure that no collisions occur. The two paradigms that vehicles communicate are vehicle-to-vehicle (V2V) using a protocol like DSRC or vehicle-to-infrastructure (V2I) usually using cellular infrastructure like 4G-LTE and 5G.</description>
      <content>&lt;p&gt;The Cal Poly Autonomous Vehicle Security Group is headed by Dr. Bruce DeBruhl who is involved in security research for autonomous vehicles, IOT devices, and all things networked.
The projects I have worked on in this group have been primarily focused towards the security of platoons of autonomous vehicles.
Vehicle platoons require extensive communication to stay cohesive and ensure that no collisions occur.
The two paradigms that vehicles communicate are vehicle-to-vehicle (V2V) using a protocol like DSRC or vehicle-to-infrastructure (V2I) usually using cellular infrastructure like 4G-LTE and 5G.&lt;/p&gt;
&lt;h3 id=&#34;scale-platoon-project&#34;&gt;Scale Platoon Project&lt;/h3&gt;
&lt;p&gt;The first year I joined the group, I provided assistance on a &lt;a href=&#34;https://digitalcommons.calpoly.edu/theses/2057&#34;&gt;master&amp;rsquo;s thesis&lt;/a&gt; and &lt;a href=&#34;https://digitalcommons.calpoly.edu/cpesp/249&#34;&gt;senior project&lt;/a&gt; both utilizing the same scale platoon platform using RC cars.
On these projects I developed real-time image processing pipelines to detect the other RC cars in the platoon and follow them.
This was done in C++ using the OpenCV library.
Due to the lack of imagery for &amp;ldquo;RC cars with electronics mounted on top&amp;rdquo;, pure image processing algorithms had to be used over machine learning or data-driven methods.
Some techniques used were distinct optical tracking markers, SIFT Features, optical flow, and sensor fusion were used to detect then track the movement of vehicles.
Since this had to run in real-time CUDA accelerated implementations were used along with the Nvidia Jetson platform.
In addition to the computer vision work, I also helped design the power distribution system for these vehicles and some of the microcontroller code to communicate with sensors like LiDAR, ultrasonic sensors, and IMUs.&lt;/p&gt;
&lt;h3 id=&#34;autonomous-vehicle-simulator&#34;&gt;Autonomous Vehicle Simulator&lt;/h3&gt;
&lt;p&gt;At the end of my third-year at Cal Poly, I started working on a new project in the group which was an autonomous vehicle simulator following the same line of thought for the scale platoon project, but not focusing on simulating life-sized vehicles on simulated roads.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Develop vision-based lane following pipeline using OpenCV to allow simulated AV to drive on roads&lt;/li&gt;
&lt;li&gt;Develop autonomous perception and sensor fusion module for autonomous driving&lt;/li&gt;
&lt;li&gt;Design self-driving control architecture of simulated vehicle in residential environment using Microsoft Airsim and Unreal Engine&lt;/li&gt;
&lt;li&gt;Implement occupancy grid based local navigation system to navigate autonomous vehicle on residential streets&lt;/li&gt;
&lt;li&gt;Implement cascaded PID controller to drive autonomous vehicle&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>potatOS</title>
      <link>https://aryndam9.github.io/projects/potatos/</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/projects/potatos/</guid>
      <description>Github
I developed an x86_64 operating system and kernel from scratch. The OS has virtual memory and threading implemented.
Links: Github </description>
      <content>&lt;p&gt;&lt;a href=&#34;https://github.com/justinnuwin/potatos&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I developed an x86_64 operating system and kernel from scratch.
The OS has virtual memory and threading implemented.&lt;/p&gt;
&lt;h4 id=&#34;links&#34;&gt;Links:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justinnuwin/potatos&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Autonomous Navigation System for Mapping &amp; Traversing Rugged Terrain</title>
      <link>https://aryndam9.github.io/projects/cp-capstone/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/projects/cp-capstone/</guid>
      <description>Github
The Northrop Grumman Collaboration Project (NGCP) is a project-club at Cal Poly that participates in engineering challenges posed by Northrop Grumman. The collaboration project is with Northrop Grumman, in addition to Cal Poly Pomona with whom the work for the engineering challenge is split with. The 2019 school year had a new mission which was a rugged-terrain rescue mission. My peers and I were tasked with with sensing and intelligence for one of their new vehicles.</description>
      <content>&lt;p&gt;&lt;a href=&#34;https://github.com/justinnuwin/NGCP-Capstone-UGV&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Northrop Grumman Collaboration Project (NGCP) is a project-club at Cal Poly that participates in engineering challenges posed by Northrop Grumman.
The collaboration project is with Northrop Grumman, in addition to Cal Poly Pomona with whom the work for the engineering challenge is split with.
The 2019 school year had a new mission which was a rugged-terrain rescue mission.
My peers and I were tasked with with sensing and intelligence for one of their new vehicles.&lt;/p&gt;

  &lt;img src=&#34;https://aryndam9.github.io/projects/cp-capstone/poster.png&#34;  alt=&#34;ASR Music Evaluation semester project poster&#34;  class=&#34;center&#34;  /&gt;


&lt;h4 id=&#34;links&#34;&gt;Links:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aryndam9.github.io/projects/cp-capstone/report.pdf&#34;&gt;Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aryndam9.github.io/projects/cp-capstone/poster.png&#34;&gt;Poster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justinnuwin/NGCP-Capstone-UGV&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
