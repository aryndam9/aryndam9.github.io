<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kernel-development on Arindam Ghosh / Computer Vision Researcher</title>
    <link>https://aryndam9.github.io/tags/kernel-development/</link>
    <description>Recent content in kernel-development on Arindam Ghosh / Computer Vision Researcher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â© 2023 Arindam Ghosh</copyright>
    <lastBuildDate>Sun, 14 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aryndam9.github.io/tags/kernel-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpeQtral</title>
      <link>https://aryndam9.github.io/experience/speqtral-2021/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aryndam9.github.io/experience/speqtral-2021/</guid>
      <description>I designed and developed a configureable 4-channel DDR LVDS Serialized AXI FPGA interface in SystemVerilog (up to 250MHz) for time-digital-converter application on an Xilinx Zynq SoC. The TDC was interfaced to the FPGA SoM that I designed. In addition to the FPGA interface, I also developed the kernel and user-space drivers for accessing/debugging the interface and TDC from the SoC Linux environment. To leverage full speed data transfers of the FPGA interface I designed, a AXI to USB 3.</description>
      <content>&lt;p&gt;I designed and developed a configureable 4-channel DDR LVDS Serialized AXI FPGA interface in SystemVerilog (up to 250MHz) for time-digital-converter application on an Xilinx Zynq SoC.
The TDC was interfaced to the FPGA SoM that I designed.
In addition to the FPGA interface, I also developed the kernel and user-space drivers for accessing/debugging the interface and TDC from the SoC Linux environment.
To leverage full speed data transfers of the FPGA interface I designed, a AXI to USB 3.0 SuperSpeed interface was designed to stream the serialized TDC datastream to a downstream computer.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
